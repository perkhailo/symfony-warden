x-volumes: &volumes
  - ${WARDEN_SSL_DIR}/rootca/certs:/etc/ssl/warden-rootca-cert:ro
  - ${WARDEN_COMPOSER_DIR}:/home/www-data/.composer:cached
  - .${WARDEN_WEB_ROOT}/:/var/www/html:cached
  - .${PHP_CONFIG_ROOT}/config.ini:/etc/php.d/config.ini

x-extra_hosts: &extra_hosts
  - ${TRAEFIK_DOMAIN}:${TRAEFIK_ADDRESS:-0.0.0.0}
  - ${TRAEFIK_SUBDOMAIN:-app}.${TRAEFIK_DOMAIN}:${TRAEFIK_ADDRESS:-0.0.0.0}

services:
  nginx:
    hostname: "${WARDEN_ENV_NAME}-nginx"
    image: ${WARDEN_IMAGE_REPOSITORY}/nginx:${NGINX_VERSION:-1.16}
    labels:
      - traefik.enable=true
      - traefik.http.routers.${WARDEN_ENV_NAME}-nginx.tls=true
      - traefik.http.routers.${WARDEN_ENV_NAME}-nginx.priority=2
      - traefik.http.routers.${WARDEN_ENV_NAME}-nginx.rule=
          HostRegexp(`{subdomain:.+}.${TRAEFIK_DOMAIN}`) || Host(`${TRAEFIK_DOMAIN}`)
      - traefik.http.services.${WARDEN_ENV_NAME}-nginx.loadbalancer.server.port=80
      - traefik.docker.network=${WARDEN_ENV_NAME}_default
    environment:
      - XDEBUG_CONNECT_BACK_HOST=${XDEBUG_CONNECT_BACK_HOST:-host.docker.internal}
      - NGINX_PUBLIC=/public
    depends_on:
      - php-fpm
  
  php-debug:
    hostname: "${WARDEN_ENV_NAME}-php-debug"
    image: ${WARDEN_IMAGE_REPOSITORY}/php-fpm-indev:${PHP_VERSION}-${XDEBUG_VERSION:-debug}
    environment:
      - TRAEFIK_DOMAIN
      - TRAEFIK_SUBDOMAIN
      - SSH_AUTH_SOCK=${SSH_AUTH_SOCK_PATH_ENV:-/tmp/ssh-auth.sock}
      - NODE_VERSION=${NODE_VERSION}
      - COMPOSER_VERSION=${COMPOSER_VERSION}
      - COMPOSER_MEMORY_LIMIT=-1
      - PHP_IDE_CONFIG=serverName=${WARDEN_ENV_NAME}-docker
    volumes: *volumes
    extra_hosts: *extra_hosts
    depends_on:
      - php-fpm

  php-fpm:
    hostname: "${WARDEN_ENV_NAME}-php-fpm"
    image: ${WARDEN_IMAGE_REPOSITORY}/php-fpm-indev:${PHP_VERSION}
    environment:
      - TRAEFIK_DOMAIN
      - TRAEFIK_SUBDOMAIN
      - SSH_AUTH_SOCK=${SSH_AUTH_SOCK_PATH_ENV:-/tmp/ssh-auth.sock}
      - NODE_VERSION=${NODE_VERSION}
      - COMPOSER_VERSION=${COMPOSER_VERSION}
      - COMPOSER_MEMORY_LIMIT=-1
    volumes: *volumes
    extra_hosts: *extra_hosts
    depends_on:
      - db
      
  db:
    hostname: "${WARDEN_ENV_NAME}-postgres"
    image: ${WARDEN_IMAGE_REPOSITORY}/${SQL_DISTRIBUTION}:${SQL_DISTRIBUTION_VERSION}
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql

networks:
  default:
    labels:
      - dev.warden.environment.name=${WARDEN_ENV_NAME}
      - dev.warden.environment.type=${WARDEN_ENV_TYPE}

volumes:
  dbdata: